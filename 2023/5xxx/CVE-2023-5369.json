{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-5369",
        "assignerOrgId": "63664ac6-956c-4cba-a5d0-f46076e16109",
        "state": "PUBLISHED",
        "assignerShortName": "freebsd",
        "dateReserved": "2023-10-03T21:25:17.658Z",
        "datePublished": "2023-10-04T03:48:53.559Z",
        "dateUpdated": "2023-10-04T03:53:02.846Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unknown",
                    "modules": [
                        "capsicum"
                    ],
                    "product": "FreeBSD",
                    "vendor": "FreeBSD",
                    "versions": [
                        {
                            "lessThan": "p4",
                            "status": "affected",
                            "version": "13.2-RELEASE",
                            "versionType": "release"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "user": "00000000-0000-4000-9000-000000000000",
                    "value": "David Chisnall"
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>Before correction, the&nbsp;<tt>copy_file_range</tt>&nbsp;system call checked only for the <tt>CAP_READ</tt> and <tt>CAP_WRITE</tt> capabilities on the input and output file descriptors, respectively.  Using an offset is logically equivalent to seeking, and the system call must additionally require the <tt>CAP_SEEK</tt> capability.</p><p>This incorrect privilege check enabled sandboxed processes with only read or write but no seek capability on a file descriptor to read data from or write data to an arbitrary location within the file corresponding to that file descriptor.<br></p>"
                        }
                    ],
                    "value": "Before correction, the copy_file_range system call checked only for the CAP_READ and CAP_WRITE capabilities on the input and output file descriptors, respectively.  Using an offset is logically equivalent to seeking, and the system call must additionally require the CAP_SEEK capability.\n\nThis incorrect privilege check enabled sandboxed processes with only read or write but no seek capability on a file descriptor to read data from or write data to an arbitrary location within the file corresponding to that file descriptor."
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-273",
                            "description": "CWE-273 Improper Check for Dropped Privileges",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "63664ac6-956c-4cba-a5d0-f46076e16109",
                "shortName": "freebsd",
                "dateUpdated": "2023-10-04T03:53:02.846Z"
            },
            "references": [
                {
                    "tags": [
                        "vendor-advisory"
                    ],
                    "url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-23:13.capsicum.asc"
                },
                {
                    "url": "https://security.netapp.com/advisory/ntap-20231124-0009/"
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "copy_file_range insufficient capability rights check",
            "x_generator": {
                "engine": "Vulnogram 0.1.0-dev"
            }
        }
    }
}