{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-26145",
        "assignerOrgId": "bae035ff-b466-4ff4-94d0-fc9efd9e1730",
        "state": "PUBLISHED",
        "assignerShortName": "snyk",
        "dateReserved": "2023-02-20T10:28:48.928Z",
        "datePublished": "2023-09-28T05:00:01.328Z",
        "dateUpdated": "2023-09-28T05:00:01.328Z"
    },
    "containers": {
        "cna": {
            "metrics": [
                {
                    "cvssV3_1": {
                        "version": "3.1",
                        "attackVector": "NETWORK",
                        "attackComplexity": "HIGH",
                        "privilegesRequired": "NONE",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "availabilityImpact": "NONE",
                        "baseScore": 7.4,
                        "baseSeverity": "HIGH",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P"
                    }
                }
            ],
            "credits": [
                {
                    "value": "Calum Hutton",
                    "lang": "en"
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-78",
                            "description": "Command Injection",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "bae035ff-b466-4ff4-94d0-fc9efd9e1730",
                "shortName": "snyk",
                "dateUpdated": "2023-09-28T05:00:01.328Z"
            },
            "descriptions": [
                {
                    "value": "This affects versions of the package pydash before 6.0.0. A number of pydash methods such as pydash.objects.invoke() and pydash.collections.invoke_map() accept dotted paths (Deep Path Strings) to target a nested Python object, relative to the original source object. These paths can be used to target internal class attributes and dict items, to retrieve, modify or invoke nested Python objects.\r\r**Note:**\r\rThe pydash.objects.invoke() method is vulnerable to Command Injection when the following prerequisites are satisfied:\r\r1) The source object (argument 1) is not a built-in object such as list/dict (otherwise, the __init__.__globals__ path is not accessible)\r\r2) The attacker has control over argument 2 (the path string) and argument 3 (the argument to pass to the invoked method)\r\r\rThe pydash.collections.invoke_map() method is also vulnerable, but is harder to exploit as the attacker does not have direct control over the argument to be passed to the invoked function.",
                    "lang": "en"
                }
            ],
            "references": [
                {
                    "url": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518"
                },
                {
                    "url": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca"
                },
                {
                    "url": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021"
                }
            ],
            "affected": [
                {
                    "product": "pydash",
                    "versions": [
                        {
                            "version": "0",
                            "lessThan": "6.0.0",
                            "status": "affected",
                            "versionType": "semver"
                        }
                    ],
                    "vendor": "n/a"
                }
            ]
        }
    }
}