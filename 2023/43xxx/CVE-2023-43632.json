{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-43632",
        "assignerOrgId": "c15abc07-96a9-4d11-a503-5d621bfe42ba",
        "state": "PUBLISHED",
        "assignerShortName": "ASRG",
        "dateReserved": "2023-09-20T14:34:14.874Z",
        "datePublished": "2023-09-21T13:13:30.579Z",
        "dateUpdated": "2023-09-28T05:40:23.793Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "packageName": "EVE OS",
                    "product": "EVE OS",
                    "programFiles": [
                        "https://github.com/lf-edge/eve/tree/master/pkg/vtpm/src/server.cpp"
                    ],
                    "repo": "https://github.com/lf-edge/eve",
                    "vendor": " LF-Edge, Zededa",
                    "versions": [
                        {
                            "lessThan": "9.5.0",
                            "status": "affected",
                            "version": "3.0.0",
                            "versionType": "release"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "user": "00000000-0000-4000-9000-000000000000",
                    "value": "Ilay Levi"
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "\n\nAs noted in the “VTPM.md” file in the eve documentation, “VTPM is a server listening on port\n8877 in EVE, exposing limited functionality of the TPM to the clients. <br>VTPM allows clients to\nexecute tpm2-tools binaries from a list of hardcoded options”\nThe communication with this server is done using protobuf, and the data is comprised of 2\nparts:\n<br>1. Header\n<br>2. Data\n<br>When a connection is made, the server is waiting for 4 bytes of data, which will be the header,\nand these 4 bytes would be parsed as uint32 size of the actual data to come.\n<br>Then, in the function “handleRequest” this size is then used in order to allocate a payload on\nthe stack for the incoming data.\n<br>As this payload is allocated on the stack, this will allow overflowing the stack size allocated for\nthe relevant process with freely controlled data.<br><br>* An attacker can crash the system. <br>* An attacker can gain control over the system, specifically on the “vtpm_server” process\nwhich has very high privileges.\n\n<br>"
                        }
                    ],
                    "value": "\nAs noted in the “VTPM.md” file in the eve documentation, “VTPM is a server listening on port\n8877 in EVE, exposing limited functionality of the TPM to the clients. \nVTPM allows clients to\nexecute tpm2-tools binaries from a list of hardcoded options”\nThe communication with this server is done using protobuf, and the data is comprised of 2\nparts:\n\n1. Header\n\n2. Data\n\nWhen a connection is made, the server is waiting for 4 bytes of data, which will be the header,\nand these 4 bytes would be parsed as uint32 size of the actual data to come.\n\nThen, in the function “handleRequest” this size is then used in order to allocate a payload on\nthe stack for the incoming data.\n\nAs this payload is allocated on the stack, this will allow overflowing the stack size allocated for\nthe relevant process with freely controlled data.\n\n* An attacker can crash the system. \n* An attacker can gain control over the system, specifically on the “vtpm_server” process\nwhich has very high privileges.\n\n\n"
                }
            ],
            "impacts": [
                {
                    "capecId": "CAPEC-100",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-100 Overflow Buffers"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "ADJACENT_NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 9,
                        "baseSeverity": "CRITICAL",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "LOW",
                        "scope": "CHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
                        "version": "3.1"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-789",
                            "description": "CWE-789 Memory Allocation with Excessive Size Value",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "c15abc07-96a9-4d11-a503-5d621bfe42ba",
                "shortName": "ASRG",
                "dateUpdated": "2023-09-28T05:40:23.793Z"
            },
            "references": [
                {
                    "url": "https://asrg.io/security-advisories/cve-2023-43632/"
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "Freely Allocate Buffer on The Stack With Data From Socket",
            "x_generator": {
                "engine": "Vulnogram 0.1.0-dev"
            }
        }
    }
}