{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-34231",
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "state": "PUBLISHED",
        "assignerShortName": "GitHub_M",
        "dateReserved": "2023-05-31T13:51:51.168Z",
        "datePublished": "2023-06-08T19:42:13.381Z",
        "dateUpdated": "2023-06-08T19:45:42.242Z"
    },
    "containers": {
        "cna": {
            "title": "Snowflake Golang Driver vulnerable to Command Injection",
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-77",
                            "lang": "en",
                            "description": "CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_0": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 7.3,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "LOW",
                        "scope": "UNCHANGED",
                        "userInteraction": "REQUIRED",
                        "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N",
                        "version": "3.0"
                    }
                }
            ],
            "references": [
                {
                    "name": "https://github.com/snowflakedb/gosnowflake/security/advisories/GHSA-fwv2-65wh-2w8c",
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/snowflakedb/gosnowflake/security/advisories/GHSA-fwv2-65wh-2w8c"
                },
                {
                    "name": "https://github.com/snowflakedb/gosnowflake/pull/757",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/snowflakedb/gosnowflake/pull/757"
                },
                {
                    "name": "https://github.com/snowflakedb/gosnowflake/commit/e11a2a555f1b9f7adc1f01fb7b5e7f38fbbb2a1c",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/snowflakedb/gosnowflake/commit/e11a2a555f1b9f7adc1f01fb7b5e7f38fbbb2a1c"
                }
            ],
            "affected": [
                {
                    "vendor": "snowflakedb",
                    "product": "gosnowflake",
                    "versions": [
                        {
                            "version": "< 1.6.19",
                            "status": "affected"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M",
                "dateUpdated": "2023-06-08T19:45:42.242Z"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "gosnowflake is th Snowflake Golang driver. Prior to version 1.6.19, a command injection vulnerability exists in the Snowflake Golang driver via single sign-on (SSO) browser URL authentication. In order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the userâ€™s local machine would render the malicious payload, leading to a remote code execution. This attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources. A patch is available in version 1.6.19."
                }
            ],
            "source": {
                "advisory": "GHSA-fwv2-65wh-2w8c",
                "discovery": "UNKNOWN"
            }
        }
    }
}