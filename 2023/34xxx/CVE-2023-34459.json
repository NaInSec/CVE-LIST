{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-34459",
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "state": "PUBLISHED",
        "assignerShortName": "GitHub_M",
        "dateReserved": "2023-06-06T16:16:53.559Z",
        "datePublished": "2023-06-16T22:13:18.181Z",
        "dateUpdated": "2023-06-16T22:13:18.181Z"
    },
    "containers": {
        "cna": {
            "title": "OpenZeppelin Contracts's MerkleProof multiproofs may allow proving arbitrary leaves for specific trees",
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-354",
                            "lang": "en",
                            "description": "CWE-354: Improper Validation of Integrity Check Value",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "HIGH",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 5.3,
                        "baseSeverity": "MEDIUM",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "LOW",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N",
                        "version": "3.1"
                    }
                }
            ],
            "references": [
                {
                    "name": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-wprv-93r4-jj2p",
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-wprv-93r4-jj2p"
                },
                {
                    "name": "https://github.com/OpenZeppelin/openzeppelin-contracts/commit/4d2383e17186be3e8ccf5a442e9686ecc7de1c55",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/commit/4d2383e17186be3e8ccf5a442e9686ecc7de1c55"
                },
                {
                    "name": "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.2",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.2"
                }
            ],
            "affected": [
                {
                    "vendor": "OpenZeppelin",
                    "product": "openzeppelin-contracts",
                    "versions": [
                        {
                            "version": ">= 4.7.0, < 4.9.2",
                            "status": "affected"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M",
                "dateUpdated": "2023-06-16T22:13:18.181Z"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "OpenZeppelin Contracts is a library for smart contract development. Starting in version 4.7.0 and prior to version 4.9.2, when the `verifyMultiProof`, `verifyMultiProofCalldata`, `procesprocessMultiProof`, or `processMultiProofCalldat` functions are in use, it is possible to construct merkle trees that allow forging a valid multiproof for an arbitrary set of leaves.\n\nA contract may be vulnerable if it uses multiproofs for verification and the merkle tree that is processed includes a node with value 0 at depth 1 (just under the root). This could happen inadvertedly for balanced trees with 3 leaves or less, if the leaves are not hashed. This could happen deliberately if a malicious tree builder includes such a node in the tree.\n\nA contract is not vulnerable if it uses single-leaf proving (`verify`, `verifyCalldata`, `processProof`, or `processProofCalldata`), or if it uses multiproofs with a known tree that has hashed leaves. Standard merkle trees produced or validated with the @openzeppelin/merkle-tree library are safe.\n\nThe problem has been patched in version 4.9.2.\n\nSome workarounds are available. For those using multiproofs: When constructing merkle trees hash the leaves and do not insert empty nodes in your trees. Using the @openzeppelin/merkle-tree package eliminates this issue. Do not accept user-provided merkle roots without reconstructing at least the first level of the tree. Verify the merkle tree structure by reconstructing it from the leaves."
                }
            ],
            "source": {
                "advisory": "GHSA-wprv-93r4-jj2p",
                "discovery": "UNKNOWN"
            }
        }
    }
}