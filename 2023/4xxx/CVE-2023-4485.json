{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2023-4485",
        "assignerOrgId": "7d14cffa-0d7d-4270-9dc0-52cabd5a23a6",
        "state": "PUBLISHED",
        "assignerShortName": "icscert",
        "dateReserved": "2023-08-22T17:40:08.822Z",
        "datePublished": "2023-09-05T23:03:57.616Z",
        "dateUpdated": "2023-09-05T23:03:57.616Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unaffected",
                    "product": "Sistemas SCADA",
                    "vendor": "ARDEREG",
                    "versions": [
                        {
                            "lessThanOrEqual": "2.203",
                            "status": "affected",
                            "version": "0",
                            "versionType": "custom"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "user": "00000000-0000-4000-9000-000000000000",
                    "value": "Momen Eldawakhly of Samurai Digital Security Ltd. reported this vulnerability to CISA."
                }
            ],
            "datePublic": "2023-08-31T17:00:00.000Z",
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<span style=\"background-color: rgb(255, 255, 255);\">ARDEREG&nbsp;<span style=\"background-color: rgb(255, 255, 255);\">​Sistema SCADA Central v</span><span style=\"background-color: rgb(255, 255, 255);\">ersions 2.203 and prior</span>\nlogin page are vulnerable to an unauthenticated blind SQL injection attack. An attacker could manipulate the application's SQL query logic to extract sensitive information or perform unauthorized actions within the database. In this case, the vulnerability could allow an attacker to execute arbitrary SQL queries through the login page, potentially leading to unauthorized access, data leakage, or even disruption of critical industrial processes.</span>\n\n"
                        }
                    ],
                    "value": "ARDEREG ​Sistema SCADA Central versions 2.203 and prior\nlogin page are vulnerable to an unauthenticated blind SQL injection attack. An attacker could manipulate the application's SQL query logic to extract sensitive information or perform unauthorized actions within the database. In this case, the vulnerability could allow an attacker to execute arbitrary SQL queries through the login page, potentially leading to unauthorized access, data leakage, or even disruption of critical industrial processes.\n\n"
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 9.8,
                        "baseSeverity": "CRITICAL",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                        "version": "3.1"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-89",
                            "description": "CWE-89 SQL Injection",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "7d14cffa-0d7d-4270-9dc0-52cabd5a23a6",
                "shortName": "icscert",
                "dateUpdated": "2023-09-05T23:03:57.616Z"
            },
            "references": [
                {
                    "url": "https://www.cisa.gov/news-events/ics-advisories/icsa-23-243-01"
                }
            ],
            "source": {
                "advisory": "ICSA-23-243-01",
                "discovery": "EXTERNAL"
            },
            "title": "ARDEREG Sistemas SCADA SQL Injection",
            "workarounds": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "\n\n\n\n<p>​ARDEREG is aware of the issue. For more information, contact ARDEREG by <a target=\"_blank\" rel=\"nofollow\">email</a>.</p><p>​ARDEREG recommends the following workarounds to help reduce the risk:</p>\n\n<ul><li>​Security Awareness and Training: Conduct regular security awareness and training sessions for developers, administrators, and other personnel involved in the management and operation of the SCADA system. Educate about the risks and consequences of SQL injection vulnerabilities and provide guidance on secure coding practices, proper input validation, and best practices for securely interacting with databases.</li><li>​Regular Security Assessments: Perform regular security assessments, including penetration testing and code reviews, to identify and address any vulnerabilities in the SCADA system. Conduct internal security audits to evaluate the overall security posture and identify any weaknesses an attacker could exploit through SQL injection or other attack vectors.</li><li>​Incident Response Plan: Develop and maintain an incident response plan specifically tailored to address security incidents related to SQL injection and other vulnerabilities in the SCADA system. Establish clear procedures and responsibilities for responding to and mitigating security incidents, including containment, investigation, and recovery steps.</li><li>​Vendor and Supply Chain Security: Ensure the vendors and suppliers involved in the development and maintenance of the SCADA system follow secure coding practices and adhere to strict security standards. Regularly evaluate and monitor the security practices to minimize the risk of introducing vulnerabilities through the supply chain.</li><li>​System Segmentation: Implement network segmentation to isolate the SCADA system from other less critical systems or public-facing networks. This reduces the attack surface and limits the potential impact of a successful SQL injection attack by containing it within a restricted network segment.</li></ul>\n\n<br>"
                        }
                    ],
                    "value": "\n\n\n​ARDEREG is aware of the issue. For more information, contact ARDEREG by email.\n\n​ARDEREG recommends the following workarounds to help reduce the risk:\n\n\n\n  *  ​Security Awareness and Training: Conduct regular security awareness and training sessions for developers, administrators, and other personnel involved in the management and operation of the SCADA system. Educate about the risks and consequences of SQL injection vulnerabilities and provide guidance on secure coding practices, proper input validation, and best practices for securely interacting with databases.\n  *  ​Regular Security Assessments: Perform regular security assessments, including penetration testing and code reviews, to identify and address any vulnerabilities in the SCADA system. Conduct internal security audits to evaluate the overall security posture and identify any weaknesses an attacker could exploit through SQL injection or other attack vectors.\n  *  ​Incident Response Plan: Develop and maintain an incident response plan specifically tailored to address security incidents related to SQL injection and other vulnerabilities in the SCADA system. Establish clear procedures and responsibilities for responding to and mitigating security incidents, including containment, investigation, and recovery steps.\n  *  ​Vendor and Supply Chain Security: Ensure the vendors and suppliers involved in the development and maintenance of the SCADA system follow secure coding practices and adhere to strict security standards. Regularly evaluate and monitor the security practices to minimize the risk of introducing vulnerabilities through the supply chain.\n  *  ​System Segmentation: Implement network segmentation to isolate the SCADA system from other less critical systems or public-facing networks. This reduces the attack surface and limits the potential impact of a successful SQL injection attack by containing it within a restricted network segment.\n\n\n\n\n\n"
                }
            ],
            "x_generator": {
                "engine": "Vulnogram 0.1.0-dev"
            }
        }
    }
}