{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "cveId": "CVE-2024-28864",
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "state": "PUBLISHED",
        "assignerShortName": "GitHub_M",
        "dateReserved": "2024-03-11T22:45:07.687Z",
        "datePublished": "2024-03-18T21:49:06.762Z",
        "dateUpdated": "2024-03-18T21:50:26.926Z"
    },
    "containers": {
        "cna": {
            "title": "[TagAwareCipher] - Decryption Failure (Regex Match)",
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-1333",
                            "lang": "en",
                            "description": "CWE-1333: Inefficient Regular Expression Complexity",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "HIGH",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 2.6,
                        "baseSeverity": "LOW",
                        "confidentialityImpact": "LOW",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "LOW",
                        "scope": "UNCHANGED",
                        "userInteraction": "REQUIRED",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:N",
                        "version": "3.1"
                    }
                }
            ],
            "references": [
                {
                    "name": "https://github.com/IlicMiljan/Secure-Props/security/advisories/GHSA-rj29-j2g4-77q8",
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/IlicMiljan/Secure-Props/security/advisories/GHSA-rj29-j2g4-77q8"
                },
                {
                    "name": "https://github.com/IlicMiljan/Secure-Props/issues/20",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/IlicMiljan/Secure-Props/issues/20"
                },
                {
                    "name": "https://github.com/IlicMiljan/Secure-Props/pull/21",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/IlicMiljan/Secure-Props/pull/21"
                },
                {
                    "name": "https://github.com/IlicMiljan/Secure-Props/commit/ab7b561040cd37fda3dbf9a6cab01fefcaa16627",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/IlicMiljan/Secure-Props/commit/ab7b561040cd37fda3dbf9a6cab01fefcaa16627"
                }
            ],
            "affected": [
                {
                    "vendor": "IlicMiljan",
                    "product": "Secure-Props",
                    "versions": [
                        {
                            "version": ">= 1.2.0, < 1.2.2",
                            "status": "affected"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M",
                "dateUpdated": "2024-03-18T21:50:26.926Z"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "SecureProps is a PHP library designed to simplify the encryption and decryption of property data in objects. A vulnerability in SecureProps version 1.2.0 and 1.2.1 involves a regex failing to detect tags during decryption of encrypted data. This occurs when the encrypted data has been encoded with `NullEncoder` and passed to `TagAwareCipher`, and contains special characters such as `\\n`. As a result, the decryption process is skipped since the tags are not detected. This causes the encrypted data to be returned in plain format.  The vulnerability affects users who implement `TagAwareCipher` with any base cipher that has `NullEncoder` (not default). The patch for the issue has been released. Users are advised to update to version 1.2.2. As a workaround, one may use the default `Base64Encoder` with the base cipher decorated with `TagAwareCipher` to prevent special characters in the encrypted string from interfering with regex tag detection logic.  This workaround is safe but may involve double encoding since `TagAwareCipher` uses `NullEncoder` by default."
                }
            ],
            "source": {
                "advisory": "GHSA-rj29-j2g4-77q8",
                "discovery": "UNKNOWN"
            }
        }
    }
}