{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0",
    "cveMetadata": {
        "state": "PUBLISHED",
        "cveId": "CVE-2022-35948",
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "assignerShortName": "GitHub_M",
        "dateUpdated": "2023-01-18T00:00:00",
        "dateReserved": "2022-07-15T00:00:00",
        "datePublished": "2022-08-13T00:00:00"
    },
    "containers": {
        "cna": {
            "title": "CRLF Injection in Nodejs ‘undici’ via Content-Type",
            "providerMetadata": {
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M",
                "dateUpdated": "2023-01-18T00:00:00"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround."
                }
            ],
            "affected": [
                {
                    "vendor": "nodejs",
                    "product": "undici",
                    "versions": [
                        {
                            "version": "=< 5.8.0",
                            "status": "affected"
                        }
                    ]
                }
            ],
            "references": [
                {
                    "url": "https://github.com/nodejs/undici/releases/tag/v5.8.2"
                },
                {
                    "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
                },
                {
                    "url": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "version": "3.1",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                        "attackVector": "NETWORK",
                        "attackComplexity": "LOW",
                        "privilegesRequired": "NONE",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "LOW",
                        "availabilityImpact": "NONE",
                        "baseScore": 5.3,
                        "baseSeverity": "MEDIUM"
                    }
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "type": "CWE",
                            "lang": "en",
                            "description": "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')",
                            "cweId": "CWE-93"
                        }
                    ]
                },
                {
                    "descriptions": [
                        {
                            "type": "CWE",
                            "lang": "en",
                            "description": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
                            "cweId": "CWE-74"
                        }
                    ]
                }
            ],
            "source": {
                "advisory": "GHSA-f772-66g8-q5h3",
                "discovery": "UNKNOWN"
            }
        }
    }
}